//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceStudent
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="student", Namespace="http://schemas.datacontract.org/2004/07/StudentsWCF")]
    public partial class student : object
    {
        
        private string cneField;
        
        private string emailField;
        
        private string firstnameField;
        
        private int idField;
        
        private string lastnameField;
        
        private string levelField;
        
        private string phoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cne
        {
            get
            {
                return this.cneField;
            }
            set
            {
                this.cneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email
        {
            get
            {
                return this.emailField;
            }
            set
            {
                this.emailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstname
        {
            get
            {
                return this.firstnameField;
            }
            set
            {
                this.firstnameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastname
        {
            get
            {
                return this.lastnameField;
            }
            set
            {
                this.lastnameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string level
        {
            get
            {
                return this.levelField;
            }
            set
            {
                this.levelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone
        {
            get
            {
                return this.phoneField;
            }
            set
            {
                this.phoneField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceStudent.IServiceStudents")]
    public interface IServiceStudents
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/GetAllStudents", ReplyAction="http://tempuri.org/IServiceStudents/GetAllStudentsResponse")]
        ServiceReferenceStudent.student[] GetAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/GetAllStudents", ReplyAction="http://tempuri.org/IServiceStudents/GetAllStudentsResponse")]
        System.Threading.Tasks.Task<ServiceReferenceStudent.student[]> GetAllStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/DeleteStudent", ReplyAction="http://tempuri.org/IServiceStudents/DeleteStudentResponse")]
        void DeleteStudent(ServiceReferenceStudent.student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/DeleteStudent", ReplyAction="http://tempuri.org/IServiceStudents/DeleteStudentResponse")]
        System.Threading.Tasks.Task DeleteStudentAsync(ServiceReferenceStudent.student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/getStudent", ReplyAction="http://tempuri.org/IServiceStudents/getStudentResponse")]
        ServiceReferenceStudent.student getStudent(int ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/getStudent", ReplyAction="http://tempuri.org/IServiceStudents/getStudentResponse")]
        System.Threading.Tasks.Task<ServiceReferenceStudent.student> getStudentAsync(int ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/UpdateStudent", ReplyAction="http://tempuri.org/IServiceStudents/UpdateStudentResponse")]
        void UpdateStudent(ServiceReferenceStudent.student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/UpdateStudent", ReplyAction="http://tempuri.org/IServiceStudents/UpdateStudentResponse")]
        System.Threading.Tasks.Task UpdateStudentAsync(ServiceReferenceStudent.student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/addStudent", ReplyAction="http://tempuri.org/IServiceStudents/addStudentResponse")]
        void addStudent(ServiceReferenceStudent.student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/addStudent", ReplyAction="http://tempuri.org/IServiceStudents/addStudentResponse")]
        System.Threading.Tasks.Task addStudentAsync(ServiceReferenceStudent.student s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/GetStudentByCNE", ReplyAction="http://tempuri.org/IServiceStudents/GetStudentByCNEResponse")]
        ServiceReferenceStudent.student GetStudentByCNE(string i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceStudents/GetStudentByCNE", ReplyAction="http://tempuri.org/IServiceStudents/GetStudentByCNEResponse")]
        System.Threading.Tasks.Task<ServiceReferenceStudent.student> GetStudentByCNEAsync(string i);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IServiceStudentsChannel : ServiceReferenceStudent.IServiceStudents, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ServiceStudentsClient : System.ServiceModel.ClientBase<ServiceReferenceStudent.IServiceStudents>, ServiceReferenceStudent.IServiceStudents
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceStudentsClient() : 
                base(ServiceStudentsClient.GetDefaultBinding(), ServiceStudentsClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceStudents.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceStudentsClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceStudentsClient.GetBindingForEndpoint(endpointConfiguration), ServiceStudentsClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceStudentsClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceStudentsClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceStudentsClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceStudentsClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceStudentsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ServiceReferenceStudent.student[] GetAllStudents()
        {
            return base.Channel.GetAllStudents();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceStudent.student[]> GetAllStudentsAsync()
        {
            return base.Channel.GetAllStudentsAsync();
        }
        
        public void DeleteStudent(ServiceReferenceStudent.student s)
        {
            base.Channel.DeleteStudent(s);
        }
        
        public System.Threading.Tasks.Task DeleteStudentAsync(ServiceReferenceStudent.student s)
        {
            return base.Channel.DeleteStudentAsync(s);
        }
        
        public ServiceReferenceStudent.student getStudent(int ids)
        {
            return base.Channel.getStudent(ids);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceStudent.student> getStudentAsync(int ids)
        {
            return base.Channel.getStudentAsync(ids);
        }
        
        public void UpdateStudent(ServiceReferenceStudent.student s)
        {
            base.Channel.UpdateStudent(s);
        }
        
        public System.Threading.Tasks.Task UpdateStudentAsync(ServiceReferenceStudent.student s)
        {
            return base.Channel.UpdateStudentAsync(s);
        }
        
        public void addStudent(ServiceReferenceStudent.student s)
        {
            base.Channel.addStudent(s);
        }
        
        public System.Threading.Tasks.Task addStudentAsync(ServiceReferenceStudent.student s)
        {
            return base.Channel.addStudentAsync(s);
        }
        
        public ServiceReferenceStudent.student GetStudentByCNE(string i)
        {
            return base.Channel.GetStudentByCNE(i);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceStudent.student> GetStudentByCNEAsync(string i)
        {
            return base.Channel.GetStudentByCNEAsync(i);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceStudents))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceStudents))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:56946/ServiceStudents.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceStudentsClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceStudents);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceStudentsClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceStudents);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceStudents,
        }
    }
}
